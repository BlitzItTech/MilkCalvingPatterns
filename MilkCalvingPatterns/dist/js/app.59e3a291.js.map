{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/components/Home.vue?f880","webpack:///./src/App.vue?0745","webpack:///./src/components/Home.vue?9d17","webpack:///src/components/Home.vue","webpack:///./src/components/Home.vue?705d","webpack:///./src/components/Home.vue?2af2","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","jsonpScriptSrc","p","chunk-04f193e6","chunk-2d0ddf37","chunk-2d20fd48","chunk-2d237151","chunk-2d21b314","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","map","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn-bd","./bn-bd.js","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-in","./en-in.js","./en-nz","./en-nz.js","./en-sg","./en-sg.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-mx","./es-mx.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fil","./fil.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-deva","./gom-deva.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./oc-lnc","./oc-lnc.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tk","./tk.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-mo","./zh-mo.js","./zh-tw","./zh-tw.js","webpackContext","req","id","webpackContextResolve","code","keys","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_66ed12c2_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_66ed12c2_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_48411656_render","_vm","this","_h","$createElement","_c","_self","attrs","_m","staticRenderFns","staticClass","_v","Homevue_type_template_id_66ed12c2_scoped_true_render","on","click","newHerd","jsonData","refresh","inline","input-class","placeholder","format","disabled-dates","disabledDates","model","callback","$$v","dayOne","expression","title","items","change","refreshYearlyHerdData","propToShow","_l","herd","index","removeHerd","$event","$set","chartData","options","chartOptions","_e","Homevue_type_template_id_66ed12c2_scoped_true_staticRenderFns","Homevue_type_script_lang_js_","components","Herd","then","MilkChart","Datepicker","ItemSelectorManual","DownloadCsv","herds","herdName","herdSize","calvingPatterns","patternName","dateFrom","Date","dateTo","staleAvg","peakAvg","freshAvg","weeksToPeak","weeksOfPeak","weeksTillStale","fertilityRate","herdRatio","weeksDry","halfPercentDryWeek","useHalfPercent","color","getNewColor","iterations","isGraphOverlay","isIndividualPatterns","responsive","maintainAspectRatio","labels","datasets","chartHerdsData","herdsData","showProp","showGraph","days","created","$cookie","loadData","methods","herdJSONString","JSON","parse","ii","pattern","Number","parseInt","saveHerds","gatherHerdData","set","stringify","getMaxDate","herdData","eDate","weekData","dateOn","getMinDate","getWeekDataByPatternFrom","find","x","dataSets","cDate","dSet","label","backgroundColor","volume","wi","weekD","isSameWeekAs","litres","addDays","getWeekDataByHerdFrom","getWeekDataByPattern","log","getDryOffCommenceDate","getStaleOnDate","getWeekDataByHerd","refreshHerdData","sDate","hD","vv","res","moment_default","cows","isSameYearlyWeekAs","exportYearlyHerdData","weekNumber","avg","eItem","convertToCSV","objArray","array","esm_typeof","str","line","exportCSVFile","headers","fileTitle","unshift","jsonObject","csv","exportedFilenmae","blob","Blob","navigator","msSaveBlob","link","download","url","URL","createObjectURL","style","visibility","body","removeChild","herdObjects","createYearlyHerdData","createHerdData","carryOvers","orderBy","dryDate","staleDate","nextCalvingPatternDate","startDate","miniHerdNumber","status","fertileCows","weeksData","formDryCowWeeks","currentDate","formDryCowYears","oWeekDate","d1","d2","weekDif1","inWeeks","weekDif2","getDate","getMonth","firstHalf","getFirstDryHalfRate","secondHalf","getSecondDryHalfRate","calvingWeeks","weekVolumes","calveDate","peakDate","peakEndDate","cowCount","endDate","weekVolume","peakWeek","avgDif","staleWeek","weeks","getAllStaleOnDate","letters","Math","floor","random","getPatternLineValues","vObjects","volumeObjects","inMilk","getHerdLineValues","selectMany","patternData","inDays","t2","getTime","t1","inMonths","d1Y","getFullYear","d2Y","d1M","d2M","inYears","components_Homevue_type_script_lang_js_","component","componentNormalizer","Home","Appvue_type_script_lang_js_","src_Appvue_type_script_lang_js_","App_component","App","$","jQuery","Vue","use","VueCookie","config","productionTip","moment","Array","prop","asc","arguments","sort","a","b","date","valueOf","setDate","fn","reduce","y","concat","render","h","$mount"],"mappings":"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OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,QAAA,OACAC,WAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,gBAAA,OACAC,aAAA,OACAC,gBAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,UAAA,OACAC,aAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,aAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA,OACAC,UAAA,OACAC,OAAA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","file":"js/app.59e3a291.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-04f193e6\":\"aab21518\",\"chunk-2d0ddf37\":\"d0958207\",\"chunk-2d20fd48\":\"e37b119a\",\"chunk-2d237151\":\"a65cc2ef\",\"chunk-2d21b314\":\"5c56f156\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var map = {\n\t\"./af\": \"2bfb\",\n\t\"./af.js\": \"2bfb\",\n\t\"./ar\": \"8e73\",\n\t\"./ar-dz\": \"a356\",\n\t\"./ar-dz.js\": \"a356\",\n\t\"./ar-kw\": \"423e\",\n\t\"./ar-kw.js\": \"423e\",\n\t\"./ar-ly\": \"1cfd\",\n\t\"./ar-ly.js\": \"1cfd\",\n\t\"./ar-ma\": \"0a84\",\n\t\"./ar-ma.js\": \"0a84\",\n\t\"./ar-sa\": \"8230\",\n\t\"./ar-sa.js\": \"8230\",\n\t\"./ar-tn\": \"6d83\",\n\t\"./ar-tn.js\": \"6d83\",\n\t\"./ar.js\": \"8e73\",\n\t\"./az\": \"485c\",\n\t\"./az.js\": \"485c\",\n\t\"./be\": \"1fc1\",\n\t\"./be.js\": \"1fc1\",\n\t\"./bg\": \"84aa\",\n\t\"./bg.js\": \"84aa\",\n\t\"./bm\": \"a7fa\",\n\t\"./bm.js\": \"a7fa\",\n\t\"./bn\": \"9043\",\n\t\"./bn-bd\": \"9686\",\n\t\"./bn-bd.js\": \"9686\",\n\t\"./bn.js\": \"9043\",\n\t\"./bo\": \"d26a\",\n\t\"./bo.js\": \"d26a\",\n\t\"./br\": \"6887\",\n\t\"./br.js\": \"6887\",\n\t\"./bs\": \"2554\",\n\t\"./bs.js\": \"2554\",\n\t\"./ca\": \"d716\",\n\t\"./ca.js\": \"d716\",\n\t\"./cs\": \"3c0d\",\n\t\"./cs.js\": \"3c0d\",\n\t\"./cv\": \"03ec\",\n\t\"./cv.js\": \"03ec\",\n\t\"./cy\": \"9797\",\n\t\"./cy.js\": \"9797\",\n\t\"./da\": \"0f14\",\n\t\"./da.js\": \"0f14\",\n\t\"./de\": \"b469\",\n\t\"./de-at\": \"b3eb\",\n\t\"./de-at.js\": \"b3eb\",\n\t\"./de-ch\": \"bb71\",\n\t\"./de-ch.js\": \"bb71\",\n\t\"./de.js\": \"b469\",\n\t\"./dv\": \"598a\",\n\t\"./dv.js\": \"598a\",\n\t\"./el\": \"8d47\",\n\t\"./el.js\": \"8d47\",\n\t\"./en-au\": \"0e6b\",\n\t\"./en-au.js\": \"0e6b\",\n\t\"./en-ca\": \"3886\",\n\t\"./en-ca.js\": \"3886\",\n\t\"./en-gb\": \"39a6\",\n\t\"./en-gb.js\": \"39a6\",\n\t\"./en-ie\": \"e1d3\",\n\t\"./en-ie.js\": \"e1d3\",\n\t\"./en-il\": \"7333\",\n\t\"./en-il.js\": \"7333\",\n\t\"./en-in\": \"ec2e\",\n\t\"./en-in.js\": \"ec2e\",\n\t\"./en-nz\": \"6f50\",\n\t\"./en-nz.js\": \"6f50\",\n\t\"./en-sg\": \"b7e9\",\n\t\"./en-sg.js\": \"b7e9\",\n\t\"./eo\": \"65db\",\n\t\"./eo.js\": \"65db\",\n\t\"./es\": \"898b\",\n\t\"./es-do\": \"0a3c\",\n\t\"./es-do.js\": \"0a3c\",\n\t\"./es-mx\": \"b5b7\",\n\t\"./es-mx.js\": \"b5b7\",\n\t\"./es-us\": \"55c9\",\n\t\"./es-us.js\": \"55c9\",\n\t\"./es.js\": \"898b\",\n\t\"./et\": \"ec18\",\n\t\"./et.js\": \"ec18\",\n\t\"./eu\": \"0ff2\",\n\t\"./eu.js\": \"0ff2\",\n\t\"./fa\": \"8df4\",\n\t\"./fa.js\": \"8df4\",\n\t\"./fi\": \"81e9\",\n\t\"./fi.js\": \"81e9\",\n\t\"./fil\": \"d69a\",\n\t\"./fil.js\": \"d69a\",\n\t\"./fo\": \"0721\",\n\t\"./fo.js\": \"0721\",\n\t\"./fr\": \"9f26\",\n\t\"./fr-ca\": \"d9f8\",\n\t\"./fr-ca.js\": \"d9f8\",\n\t\"./fr-ch\": \"0e49\",\n\t\"./fr-ch.js\": \"0e49\",\n\t\"./fr.js\": \"9f26\",\n\t\"./fy\": \"7118\",\n\t\"./fy.js\": \"7118\",\n\t\"./ga\": \"5120\",\n\t\"./ga.js\": \"5120\",\n\t\"./gd\": \"f6b4\",\n\t\"./gd.js\": \"f6b4\",\n\t\"./gl\": \"8840\",\n\t\"./gl.js\": \"8840\",\n\t\"./gom-deva\": \"aaf2\",\n\t\"./gom-deva.js\": \"aaf2\",\n\t\"./gom-latn\": \"0caa\",\n\t\"./gom-latn.js\": \"0caa\",\n\t\"./gu\": \"e0c5\",\n\t\"./gu.js\": \"e0c5\",\n\t\"./he\": \"c7aa\",\n\t\"./he.js\": \"c7aa\",\n\t\"./hi\": \"dc4d\",\n\t\"./hi.js\": \"dc4d\",\n\t\"./hr\": \"4ba9\",\n\t\"./hr.js\": \"4ba9\",\n\t\"./hu\": \"5b14\",\n\t\"./hu.js\": \"5b14\",\n\t\"./hy-am\": \"d6b6\",\n\t\"./hy-am.js\": \"d6b6\",\n\t\"./id\": \"5038\",\n\t\"./id.js\": \"5038\",\n\t\"./is\": \"0558\",\n\t\"./is.js\": \"0558\",\n\t\"./it\": \"6e98\",\n\t\"./it-ch\": \"6f12\",\n\t\"./it-ch.js\": \"6f12\",\n\t\"./it.js\": \"6e98\",\n\t\"./ja\": \"079e\",\n\t\"./ja.js\": \"079e\",\n\t\"./jv\": \"b540\",\n\t\"./jv.js\": \"b540\",\n\t\"./ka\": \"201b\",\n\t\"./ka.js\": \"201b\",\n\t\"./kk\": \"6d79\",\n\t\"./kk.js\": \"6d79\",\n\t\"./km\": \"e81d\",\n\t\"./km.js\": \"e81d\",\n\t\"./kn\": \"3e92\",\n\t\"./kn.js\": \"3e92\",\n\t\"./ko\": \"22f8\",\n\t\"./ko.js\": \"22f8\",\n\t\"./ku\": \"2421\",\n\t\"./ku.js\": \"2421\",\n\t\"./ky\": \"9609\",\n\t\"./ky.js\": \"9609\",\n\t\"./lb\": \"440c\",\n\t\"./lb.js\": \"440c\",\n\t\"./lo\": \"b29d\",\n\t\"./lo.js\": \"b29d\",\n\t\"./lt\": \"26f9\",\n\t\"./lt.js\": \"26f9\",\n\t\"./lv\": \"b97c\",\n\t\"./lv.js\": \"b97c\",\n\t\"./me\": \"293c\",\n\t\"./me.js\": \"293c\",\n\t\"./mi\": \"688b\",\n\t\"./mi.js\": \"688b\",\n\t\"./mk\": \"6909\",\n\t\"./mk.js\": \"6909\",\n\t\"./ml\": \"02fb\",\n\t\"./ml.js\": \"02fb\",\n\t\"./mn\": \"958b\",\n\t\"./mn.js\": \"958b\",\n\t\"./mr\": \"39bd\",\n\t\"./mr.js\": \"39bd\",\n\t\"./ms\": \"ebe4\",\n\t\"./ms-my\": \"6403\",\n\t\"./ms-my.js\": \"6403\",\n\t\"./ms.js\": \"ebe4\",\n\t\"./mt\": \"1b45\",\n\t\"./mt.js\": \"1b45\",\n\t\"./my\": \"8689\",\n\t\"./my.js\": \"8689\",\n\t\"./nb\": \"6ce3\",\n\t\"./nb.js\": \"6ce3\",\n\t\"./ne\": \"3a39\",\n\t\"./ne.js\": \"3a39\",\n\t\"./nl\": \"facd\",\n\t\"./nl-be\": \"db29\",\n\t\"./nl-be.js\": \"db29\",\n\t\"./nl.js\": \"facd\",\n\t\"./nn\": \"b84c\",\n\t\"./nn.js\": \"b84c\",\n\t\"./oc-lnc\": \"167b\",\n\t\"./oc-lnc.js\": \"167b\",\n\t\"./pa-in\": \"f3ff\",\n\t\"./pa-in.js\": \"f3ff\",\n\t\"./pl\": \"8d57\",\n\t\"./pl.js\": \"8d57\",\n\t\"./pt\": \"f260\",\n\t\"./pt-br\": \"d2d4\",\n\t\"./pt-br.js\": \"d2d4\",\n\t\"./pt.js\": \"f260\",\n\t\"./ro\": \"972c\",\n\t\"./ro.js\": \"972c\",\n\t\"./ru\": \"957c\",\n\t\"./ru.js\": \"957c\",\n\t\"./sd\": \"6784\",\n\t\"./sd.js\": \"6784\",\n\t\"./se\": \"ffff\",\n\t\"./se.js\": \"ffff\",\n\t\"./si\": \"eda5\",\n\t\"./si.js\": \"eda5\",\n\t\"./sk\": \"7be6\",\n\t\"./sk.js\": \"7be6\",\n\t\"./sl\": \"8155\",\n\t\"./sl.js\": \"8155\",\n\t\"./sq\": \"c8f3\",\n\t\"./sq.js\": \"c8f3\",\n\t\"./sr\": \"cf1e\",\n\t\"./sr-cyrl\": \"13e9\",\n\t\"./sr-cyrl.js\": \"13e9\",\n\t\"./sr.js\": \"cf1e\",\n\t\"./ss\": \"52bd\",\n\t\"./ss.js\": \"52bd\",\n\t\"./sv\": \"5fbd\",\n\t\"./sv.js\": \"5fbd\",\n\t\"./sw\": \"74dc\",\n\t\"./sw.js\": \"74dc\",\n\t\"./ta\": \"3de5\",\n\t\"./ta.js\": \"3de5\",\n\t\"./te\": \"5cbb\",\n\t\"./te.js\": \"5cbb\",\n\t\"./tet\": \"576c\",\n\t\"./tet.js\": \"576c\",\n\t\"./tg\": \"3b1b\",\n\t\"./tg.js\": \"3b1b\",\n\t\"./th\": \"10e8\",\n\t\"./th.js\": \"10e8\",\n\t\"./tk\": \"5aff\",\n\t\"./tk.js\": \"5aff\",\n\t\"./tl-ph\": \"0f38\",\n\t\"./tl-ph.js\": \"0f38\",\n\t\"./tlh\": \"cf75\",\n\t\"./tlh.js\": \"cf75\",\n\t\"./tr\": \"0e81\",\n\t\"./tr.js\": \"0e81\",\n\t\"./tzl\": \"cf51\",\n\t\"./tzl.js\": \"cf51\",\n\t\"./tzm\": \"c109\",\n\t\"./tzm-latn\": \"b53d\",\n\t\"./tzm-latn.js\": \"b53d\",\n\t\"./tzm.js\": \"c109\",\n\t\"./ug-cn\": \"6117\",\n\t\"./ug-cn.js\": \"6117\",\n\t\"./uk\": \"ada2\",\n\t\"./uk.js\": \"ada2\",\n\t\"./ur\": \"5294\",\n\t\"./ur.js\": \"5294\",\n\t\"./uz\": \"2e8c\",\n\t\"./uz-latn\": \"010e\",\n\t\"./uz-latn.js\": \"010e\",\n\t\"./uz.js\": \"2e8c\",\n\t\"./vi\": \"2921\",\n\t\"./vi.js\": \"2921\",\n\t\"./x-pseudo\": \"fd7e\",\n\t\"./x-pseudo.js\": \"fd7e\",\n\t\"./yo\": \"7f33\",\n\t\"./yo.js\": \"7f33\",\n\t\"./zh-cn\": \"5c3a\",\n\t\"./zh-cn.js\": \"5c3a\",\n\t\"./zh-hk\": \"49ab\",\n\t\"./zh-hk.js\": \"49ab\",\n\t\"./zh-mo\": \"3a6c\",\n\t\"./zh-mo.js\": \"3a6c\",\n\t\"./zh-tw\": \"90ea\",\n\t\"./zh-tw.js\": \"90ea\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4678\";","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=66ed12c2&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=66ed12c2&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_vm._m(0),_c('Home')],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"navbar navbar-light bg-light fixed-top\"},[_c('h3',[_vm._v(\"Milk Projections\")])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mx-4\"},[_c('div',{staticClass:\"below-nav row\"},[_c('div',{staticClass:\"col-sm-6 col-md-5 col-lg-4 col-xl-3 bg-light full-screen\"},[_c('div',{staticClass:\"row align-middle\"},[_c('button',{staticClass:\"btn btn-primary mx-1\",on:{\"click\":_vm.newHerd}},[_c('span',{staticClass:\"oi oi-plus mr-1\"}),_vm._v(\"Herd\")]),_c('download-csv',{staticClass:\"btn btn-primary\",attrs:{\"data\":_vm.jsonData,\"name\":\"herddata.csv\"}},[_c('span',{staticClass:\"oi oi-data-transfer-download\"})]),_c('button',{staticClass:\"btn btn-primary mx-1\",on:{\"click\":_vm.refresh}},[_c('span',{staticClass:\"oi oi-reload\"})])],1),_c('hr'),_c('div',[_c('label',{staticClass:\"col-sm-4 col-form-label\"},[_vm._v(\"Start On\")]),_c('div',{staticClass:\"col-sm-8\"},[_c('datepicker',{attrs:{\"inline\":true,\"input-class\":\"form-control\",\"placeholder\":\"select date\",\"format\":\"D dd-MMM yy\",\"disabled-dates\":_vm.disabledDates},model:{value:(_vm.dayOne),callback:function ($$v) {_vm.dayOne=$$v},expression:\"dayOne\"}})],1)]),_c('div',[_c('Item-Selector-Manual',{attrs:{\"title\":\"Line Property\",\"items\":['Litres', 'Average', 'Cows In Milk']},on:{\"change\":_vm.refreshYearlyHerdData},model:{value:(_vm.propToShow),callback:function ($$v) {_vm.propToShow=$$v},expression:\"propToShow\"}})],1),_c('hr'),_vm._l((_vm.herds),function(herd,index){return _c('Herd',{key:index,on:{\"removeHerd\":function($event){_vm.removeHerd(index)}},model:{value:(herd.herd),callback:function ($$v) {_vm.$set(herd, \"herd\", $$v)},expression:\"herd.herd\"}})})],2),_c('div',{staticClass:\"col-sm-6 col-md-7 col-lg-8 col-xl-9 offset-sm-6 offset-md-5 offset-lg-4 offset-xl-3 fixed-top\"},[_vm._v(\"\\n            Right Column\\n            \"),(_vm.showGraph)?_c('Milk-Chart',{attrs:{\"data\":_vm.chartData,\"options\":_vm.chartOptions}}):_vm._e()],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>    \r\n    <div class=\"mx-4\">\r\n        <div class=\"below-nav row\">\r\n            <div class=\"col-sm-6 col-md-5 col-lg-4 col-xl-3 bg-light full-screen\">\r\n                <div class=\"row align-middle\">\r\n                    <button class=\"btn btn-primary mx-1\" @click=\"newHerd\"><span class=\"oi oi-plus mr-1\" />Herd</button>\r\n                    <!--<button class=\"btn btn-primary mx-1\">Load</button>-->\r\n                    <download-csv class=\"btn btn-primary\" :data=\"jsonData\" name=\"herddata.csv\">\r\n                        <span class=\"oi oi-data-transfer-download\"/>                        \r\n                    </download-csv>\r\n                    <button class=\"btn btn-primary mx-1\" @click=\"refresh\"><span class=\"oi oi-reload\" /></button>\r\n                </div>                \r\n\r\n                <hr />\r\n\r\n                <div>\r\n                    <label class=\"col-sm-4 col-form-label\">Start On</label>\r\n                    <div class=\"col-sm-8\">\r\n                        <datepicker :inline=\"true\" input-class=\"form-control\" v-model=\"dayOne\" placeholder=\"select date\" format=\"D dd-MMM yy\" :disabled-dates=\"disabledDates\"></datepicker>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <Item-Selector-Manual title=\"Line Property\" @change=\"refreshYearlyHerdData\" v-model=\"propToShow\" :items=\"['Litres', 'Average', 'Cows In Milk']\"/>\r\n                </div>\r\n\r\n                <!--<div>\r\n                    <input type=\"checkbox\" v-model=\"isGraphOverlay\" @change=\"refreshYearlyHerdData\" />\r\n                    <label class=\"ml-3\">Overlay</label>\r\n                </div>\r\n\r\n                <div>\r\n                    <input type=\"checkbox\" v-model=\"isIndividualPatterns\" @change=\"refreshYearlyHerdData\" />\r\n                    <label class=\"ml-3\">Calving Pattern Lines</label>\r\n                </div>-->\r\n\r\n                <hr />\r\n                <Herd v-for=\"(herd, index) in herds\" :key=\"index\" v-model=\"herd.herd\" @removeHerd=\"removeHerd(index)\">\r\n                </Herd>\r\n            </div>\r\n            <div class=\"col-sm-6 col-md-7 col-lg-8 col-xl-9 offset-sm-6 offset-md-5 offset-lg-4 offset-xl-3 fixed-top\">\r\n                Right Column\r\n                <Milk-Chart v-if=\"showGraph\" :data=\"chartData\" :options=\"chartOptions\"/>\r\n            </div>\r\n        </div>\r\n    </div>    \r\n</template>\r\n\r\n<script>\r\n    import moment from 'moment';\r\n    import JsonCSV from 'vue-json-csv';\r\n\r\n    export default {\r\n        name: 'Home',     \r\n        components: {\r\n            Herd: () => import('./Herd.vue'),\r\n            MilkChart: () => import('./Milk-Chart.vue'),     \r\n            Datepicker: () => import('vuejs-datepicker'),\r\n            ItemSelectorManual: () => import('./Item-Selector-Manual.vue'),\r\n            DownloadCsv: () => import('vue-json-csv'),\r\n        },\r\n        data: function () {\r\n            return {\r\n                propToShow: 'Litres,=',\r\n                //herd: { calvingPatters: Array, herdName: String}\r\n                herds: [\r\n                    {\r\n                        herd: {\r\n                            herdName: 'Herd One',\r\n                            herdSize: 100,\r\n                            calvingPatterns: [\r\n                                {\r\n                                    patternName: 'Summer Calvers',\r\n                                    dateFrom: new Date('2/3/20'),\r\n                                    dateTo: new Date('3/2/20'),\r\n                                    staleAvg: 22,\r\n                                    peakAvg: 30,\r\n                                    freshAvg: 20,\r\n                                    weeksToPeak: 6,\r\n                                    weeksOfPeak: 20,\r\n                                    weeksTillStale: 20,\r\n                                    fertilityRate: 100,\r\n                                    herdRatio: 100,                                    \r\n                                    weeksDry: 8,\r\n                                    halfPercentDryWeek: 3,\r\n                                    useHalfPercent: false,\r\n                                }\r\n                            ],\r\n                            color: this.getNewColor(),\r\n                        }\r\n                    }                    \r\n                ],\r\n                iterations: 1,\r\n                dayOne: new Date('2/3/20'),\r\n                isGraphOverlay: true,\r\n                isIndividualPatterns: false,\r\n                chartOptions: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                },\r\n                chartData: {\r\n                    labels: [],\r\n                    datasets: []\r\n                        //{\r\n                        //    //label, backgroundColor, data: []\r\n                        //    label: 'Data One',\r\n                        //    backgroundColor: '#f87979',\r\n                        //    data: [40, 20],\r\n                        //}\r\n                    //]\r\n                },\r\n                chartHerdsData: [],\r\n                herdsData: null,\r\n                showProp: 'Litres',\r\n                showGraph: true,    \r\n                disabledDates: {\r\n                    days: [6,0,2,3,4,5]\r\n                },\r\n                jsonData: null,\r\n            }            \r\n        },\r\n        created() {\r\n            var e = this.$cookie.get('milk-graphs');\r\n            //console.log(e);\r\n            if (e != null) {\r\n                this.loadData(e);                \r\n                this.refresh();\r\n            }\r\n        },\r\n        methods: {\r\n            loadData(herdJSONString) {\r\n                var herds = JSON.parse(herdJSONString);\r\n\r\n                for (var i = 0; i < herds.length; i++) {\r\n                    var herd = herds[i].herd;\r\n                    for (var ii = 0; ii < herd.calvingPatterns.length; ii++) {\r\n                        var pattern = herd.calvingPatterns[ii];\r\n\r\n                        pattern.dateFrom = new Date(pattern.dateFrom);\r\n                        pattern.dateTo = new Date(pattern.dateTo);\r\n                    }\r\n                }\r\n\r\n                this.herds = herds;\r\n            },\r\n            newHerd() {\r\n                this.herds.push({\r\n                    herd: {\r\n                        herdName: 'Herd ' + (Number.parseInt(this.herds.length) + 1),\r\n                        herdSize: 100,\r\n                        calvingPatterns: [\r\n                                {\r\n                                    patternName: 'Summer Calvers',\r\n                                    dateFrom: new Date('2/3/20'),\r\n                                    dateTo: new Date('3/2/20'),\r\n                                    staleAvg: 22,\r\n                                    peakAvg: 30,\r\n                                    freshAvg: 20,\r\n                                    weeksToPeak: 6,\r\n                                    weeksOfPeak: 20,\r\n                                    weeksTillStale: 20,\r\n                                    fertilityRate: 100,\r\n                                    herdRatio: 100,                                    \r\n                                    weeksDry: 8,\r\n                                    halfPercentDryWeek: 3,\r\n                                    useHalfPercent: false,\r\n                                    \r\n                                }\r\n                        ],\r\n                        color: this.getNewColor(),\r\n                    }\r\n                })\r\n            },\r\n            removeHerd(index) {\r\n                this.herds.splice(index, 1);\r\n            },\r\n            saveHerds() {\r\n\r\n            },\r\n            refresh() {        \r\n                //console.log('gathering');\r\n                this.showGraph = false;\r\n                \r\n                this.gatherHerdData();\r\n                //console.log('refreshing');\r\n                this.refreshYearlyHerdData();   \r\n                //console.log('done.');\r\n                this.showGraph = true;\r\n                this.$cookie.set('milk-graphs', JSON.stringify(this.herds), 30);\r\n\r\n            },\r\n            getMaxDate(herdData) {               \r\n                var eDate = new Date();\r\n                for (var i = 0; i < herdData.weekData.length; i++) {\r\n                    var weekData = herdData.weekData[i];\r\n\r\n                    if (weekData.dateOn > eDate) {\r\n                        eDate = weekData.dateOn;\r\n                    }\r\n                }\r\n\r\n                return eDate;\r\n            }, \r\n            getMinDate(herdData) {               \r\n                var eDate = new Date('1/1/2200');\r\n                for (var i = 0; i < herdData.weekData.length; i++) {\r\n                    var weekData = herdData.weekData[i];\r\n\r\n                    if (weekData.dateOn < eDate) {\r\n                        eDate = weekData.dateOn;\r\n                    }\r\n                }\r\n               \r\n                return eDate;\r\n            }, \r\n            //returns data sets\r\n            getWeekDataByPatternFrom(herdData, dateFrom, dateTo) {                \r\n                var herd = this.herds.find(x => x.herdName = herdData.herdName);\r\n                var dataSets = [];\r\n\r\n                for (var i = 0; i < herd.calvingPatterns.length; i++) {\r\n                    var pattern = herd.calvingPatterns[i];\r\n                    var cDate = dateFrom;\r\n                    var eDate = dateTo;\r\n                    //new data set here\r\n                    var dSet = {\r\n                        label: herdData.herdName + ' : ' + pattern.patternName,\r\n                        backgroundColor: this.getNewColor(),\r\n                        data: []\r\n                    };\r\n\r\n                    do {\r\n                        var volume = 0;\r\n\r\n                        for (var wi = 0; wi < herdData.weekData.length; wi++) {\r\n                            var weekD = herdData.weekData[wi];                                                                   \r\n                            if (this.isSameWeekAs(cDate, weekD.dateOn)) {\r\n                                volume += weekD.litres;\r\n                            }\r\n                        }\r\n\r\n                        dSet.data.push(volume);\r\n                        cDate = cDate.addDays(7);\r\n\r\n                    } while (cDate <= eDate);\r\n\r\n                    dataSets.push(dSet);\r\n                }\r\n\r\n                return dataSets;\r\n            },\r\n            //returns data set\r\n            getWeekDataByHerdFrom(herdData, dateFrom, dateTo) {\r\n                var herd = this.herds.find(x => x.herdName = herdData.herdName);\r\n                var cDate = dateFrom;\r\n                var eDate = dateTo;\r\n                var dSet = {\r\n                        label: herdData.herdName,\r\n                        backgroundColor: this.getNewColor(),\r\n                        data: []\r\n                };\r\n\r\n                do {\r\n                    var volume = 0;\r\n\r\n                    for (var i = 0; i < herdData.weekData.length; i++) {\r\n                        var weekData = herdData.weekData[i];\r\n\r\n                        if (this.isSameWeekAs(cDate, weekData.dateOn)) {\r\n                            volume += weekData.litres;\r\n                        }\r\n                    }\r\n\r\n                    dSet.data.push(volume);\r\n\r\n                    cDate = cDate.addDays(7);\r\n                } while (cDate <= eDate);\r\n\r\n                return dSet;\r\n            },\r\n             //returns data sets\r\n            getWeekDataByPattern(herdData) {\r\n                var herd = this.herds.find(x => x.herdName = herdData.herdName);\r\n                var dataSets = [];\r\n                console.log(herd);\r\n                for (var i = 0; i < herd.calvingPatterns.length; i++) {\r\n                    var pattern = herd.calvingPatterns[i];\r\n                    var cDate = this.getDryOffCommenceDate(pattern); //dateFrom;\r\n                    var eDate = this.getStaleOnDate(pattern); //dateTo;\r\n                    //new data set here\r\n                    var dSet = {\r\n                        label: herdData.herdName + ' : ' + pattern.patternName,\r\n                        backgroundColor: this.getNewColor(),\r\n                        data: []\r\n                    };\r\n\r\n                    do {\r\n                        var volume = 0;\r\n\r\n                        for (var wi = 0; wi < herdData.weekData.length; wi++) {\r\n                            var weekD = herdData.weekData[wi];                                                                   \r\n                            if (this.isSameWeekAs(cDate, weekD.dateOn)) {\r\n                                volume += weekD.litres;\r\n                            }\r\n                        }\r\n\r\n                        dSet.data.push(volume);\r\n                        cDate = cDate.addDays(7);\r\n\r\n                    } while (cDate <= eDate);\r\n\r\n                    dataSets.push(dSet);\r\n                }\r\n\r\n                return dataSets;\r\n            },\r\n            //returns data set\r\n            getWeekDataByHerd(herdData) {                \r\n                var cDate = this.getMinDate(herdData);\r\n                var eDate = this.getMaxDate(herdData);\r\n                console.log(herdData);\r\n                var dSet = {\r\n                    label: herdData.herdName,\r\n                    backgroundColor: this.getNewColor(),\r\n                    data: []\r\n                };\r\n\r\n                do {\r\n                    var volume = 0;\r\n\r\n                    for (var i = 0; i < herdData.weekData.length; i++) {\r\n                        var weekData = herdData.weekData[i];\r\n\r\n                        if (this.isSameWeekAs(cDate, weekData.dateOn)) {\r\n                            volume += weekData.litres;\r\n                        }\r\n                    }\r\n\r\n                    if (this.isSameWeekAs(cDate, this.getMinDate(herdData))) {\r\n                        console.log('blah: ' + volume);\r\n                    }\r\n\r\n                    dSet.data.push(volume);\r\n\r\n                    cDate = cDate.addDays(7);\r\n                } while (cDate <= eDate);\r\n\r\n                return dSet;\r\n            },\r\n            refreshHerdData() {\r\n                var dataSets = [];\r\n                var labels = [];\r\n                //var sDate = this.dayOne;\r\n                var sDate = new Date();\r\n\r\n                for (var ii = 0; ii < this.chartHerdsData.length; ii++) {\r\n                    var hD = this.chartHerdsData[ii];\r\n                    var d = this.getMinDate(hD);\r\n                    if (d < sDate || ii == 0) {\r\n                        sDate = d;\r\n                    }\r\n                }\r\n               \r\n                //herdData = { herdName: String, weekData: [] }\r\n                for (var vv = 0; vv < this.chartHerdsData.length; vv++) {\r\n                    var herdData = this.chartHerdsData[vv];                                      \r\n                    var eDate = this.getMaxDate(herdData);\r\n\r\n                    if (this.isGraphOverlay == true) {\r\n                        if (vv == 0) {\r\n                            var r = 1;\r\n                            do {\r\n                                labels.push(r);\r\n                                r += 1;\r\n                            } while (r <= 52);\r\n                        }\r\n                        \r\n                        if (this.isIndividualPatterns == true) {\r\n                            var res = this.getWeekDataByPattern(herdData);\r\n                            for (var i = 0; i < res.length; i++) {\r\n                                dataSets.push(res[i]);\r\n                            }\r\n                        }\r\n                        else {                           \r\n                            var res = this.getWeekDataByHerd(herdData);\r\n                            dataSets.push(res);                                                                     \r\n                        }                        \r\n                    }\r\n                    else {  \r\n                        if (vv == 0) {\r\n                            var cDate = sDate;\r\n                            do {\r\n                                labels.push(moment(cDate).format('DD MMM YYYY'));\r\n                                cDate = cDate.addDays(7);\r\n                            } while (cDate <= eDate);\r\n                        }\r\n                        \r\n                        if (this.isIndividualPatterns == true) {\r\n                            var res = this.getWeekDataByPatternFrom(herdData, sDate, eDate);\r\n                            for (var i = 0; i < res.length; i++) {\r\n                                dataSets.push(res[i]);\r\n                            }\r\n                        }\r\n                        else {                           \r\n                            var res = this.getWeekDataByHerdFrom(herdData, sDate, eDate);\r\n                            dataSets.push(res);\r\n                            //dataSets.push({\r\n                            //    label: herdData.herdName,\r\n                            //    backgroundColor: this.getNewColor(),\r\n                            //    data: this.getHerdLineValues(herdData.patternData),\r\n                            //})                                                    \r\n                        }                        \r\n                    }\r\n                }    \r\n\r\n                this.chartData = {\r\n                    labels: labels.length > 0 ? labels : null,\r\n                    datasets: dataSets,\r\n                };\r\n\r\n                //this.chartData = data;                \r\n            },         \r\n            refreshYearlyHerdData() {\r\n                var dataSets = [];\r\n                var labels = [];\r\n                //var sDate = this.dayOne;                \r\n                for (var i = 0; i < this.chartHerdsData.length; i++) {\r\n                    var herdData = this.chartHerdsData[i];\r\n\r\n                    var sDate = this.dayOne;\r\n                    var eDate = sDate.addDays(52 * 7);\r\n                    var dSet = {\r\n                        label: herdData.herdName,\r\n                        backgroundColor: herdData.color, //this.getNewColor(),\r\n                        data: []\r\n                    }\r\n\r\n                    do {\r\n                        if (i == 0) {\r\n                            //labels\r\n                            labels.push(moment(sDate).format('DD MMM'));\r\n                        }\r\n                        var volume = 0;\r\n                        var cows = 0;\r\n\r\n                        for (var wi = 0; wi < herdData.weekData.length; wi++) {\r\n                            var weekD = herdData.weekData[wi];                                                                   \r\n                            if (this.isSameYearlyWeekAs(this.dayOne, sDate, weekD.dateOn)) {\r\n                                volume += weekD.litres;\r\n                                if (weekD.litres > 0) {\r\n                                    cows += weekD.cows;\r\n                                }                                \r\n                            }\r\n                        }\r\n                        \r\n                        if (this.propToShow == 'Average') {\r\n                            if (cows > 0 && volume > 0) {\r\n                                dSet.data.push(volume / cows);                            \r\n                            }\r\n                            else {\r\n                                dSet.data.push(0);\r\n                            }                            \r\n                        }\r\n                        else if (this.propToShow == 'Cows In Milk') {\r\n                            dSet.data.push(cows);\r\n                        }\r\n                        else {\r\n                            dSet.data.push(volume);\r\n                        }\r\n\r\n                        //dSet.data.push(volume);\r\n\r\n                        sDate = sDate.addDays(7);\r\n                    } while (sDate < eDate);\r\n\r\n                    dataSets.push(dSet);\r\n                }\r\n\r\n                this.exportYearlyHerdData();\r\n\r\n                this.chartData = {\r\n                    labels: labels,\r\n                    datasets: dataSets,\r\n                };\r\n            },         \r\n            exportYearlyHerdData() {                \r\n                var data = [];\r\n                //var sDate = this.dayOne;                \r\n                for (var i = 0; i < this.chartHerdsData.length; i++) {\r\n                    var herdData = this.chartHerdsData[i];                    \r\n                    var sDate = this.dayOne;\r\n                    var eDate = sDate.addDays(52 * 7);\r\n                    var weekNumber = 0;\r\n                    do {                       \r\n                        var volume = 0;\r\n                        var cows = 0;\r\n\r\n                        for (var wi = 0; wi < herdData.weekData.length; wi++) {\r\n                            var weekD = herdData.weekData[wi];                                                                   \r\n                            if (this.isSameYearlyWeekAs(this.dayOne, sDate, weekD.dateOn)) {\r\n                                volume += weekD.litres;\r\n                                if (weekD.litres > 0) {\r\n                                    cows += weekD.cows;\r\n                                }                                \r\n                            }\r\n                        }\r\n\r\n                        var avg = 0;\r\n                        if (cows > 0 && volume > 0) {\r\n                            avg = volume / cows;                            \r\n                        }\r\n\r\n                        var eItem = data[weekNumber];\r\n\r\n                        if (eItem == null) {\r\n                            eItem = {\r\n                                dateOn: moment(sDate).format('DD MMM'),\r\n                            };\r\n\r\n                            data.push(eItem);\r\n                        };\r\n\r\n                        eItem[herdData.herdName + ' Average'] = avg;\r\n                        eItem[herdData.herdName + ' Milking Cows'] = cows;\r\n                        eItem[herdData.herdName + ' Litres'] = volume;\r\n\r\n                        //data.push({\r\n                        //    herd: herdData.herdName,\r\n                        //    dateOn: moment(sDate).format('DD MMM'),\r\n                        //    average: avg,\r\n                        //    cowsInMilk: cows,\r\n                        //    litres: volume,\r\n                        //});\r\n                        weekNumber += 1;\r\n\r\n                        sDate = sDate.addDays(7);\r\n                    } while (sDate < eDate);\r\n\r\n                    //herdSets.push({\r\n                    //    herd: herdData.herdName,\r\n                    //    data: dSet\r\n                    //});\r\n                }\r\n\r\n                //console.log(data);\r\n                this.jsonData = data; // JSON.stringify(data);\r\n                //this.jsonData = this.convertToCSV(data);                \r\n\r\n            },     \r\n            convertToCSV(objArray) {\r\n                var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n                var str = '';\r\n                for (var i = 0; i < array.length; i++) {\r\n                    var line = '';\r\n                    for (var index in array[i]) {\r\n                        if (line != '') line += ','\r\n                        line += array[i][index];\r\n                    }\r\n                    str += line + '\\r\\n';\r\n                }\r\n                return str;\r\n            },\r\n\r\n\r\n            exportCSVFile(headers, items, fileTitle) {\r\n\r\n                if (headers) {\r\n\r\n                    items.unshift(headers);\r\n\r\n                }\r\n                // Convert Object to JSON\r\n                var jsonObject = JSON.stringify(items);\r\n                var csv = this.convertToCSV(jsonObject);\r\n                var exportedFilenmae = fileTitle + '.csv' || 'export.csv';\r\n                var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\r\n                if (navigator.msSaveBlob) { // IE 10+\r\n                    navigator.msSaveBlob(blob, exportedFilenmae);\r\n                } else {\r\n                    var link = document.createElement(\"a\");\r\n                   if (link.download !== undefined) { // feature detection\r\n\r\n            // Browsers that support HTML5 download attribute\r\n                        var url = URL.createObjectURL(blob);\r\n                        link.setAttribute(\"href\", url);\r\n                        link.setAttribute(\"download\", exportedFilenmae);\r\n                        link.style.visibility = 'hidden';\r\n                        document.body.appendChild(link);\r\n                        link.click();\r\n                        document.body.removeChild(link);\r\n                    }\r\n                }\r\n            },\r\n            gatherHerdData() {\r\n                var herdObjects = [];\r\n\r\n                for (var i = 0; i < this.herds.length; i++) {\r\n                    var herd = this.herds[i];\r\n\r\n                    herdObjects.push({\r\n                        herdName: herd.herd.herdName,\r\n                        color: herd.herd.color,\r\n                        weekData: this.createYearlyHerdData(herd.herd),// this.createHerdData(herd.herd)\r\n                    });\r\n                }\r\n               \r\n                this.chartHerdsData = herdObjects;\r\n            },            \r\n            createHerdData(herd) {                \r\n                var patternData = [];                \r\n                var carryOvers = 0;                \r\n                var weekData = [];                \r\n                var sDate = new Date();\r\n\r\n                herd.calvingPatterns.orderBy('dateFrom');\r\n\r\n                 //week data = { dateOn, patternName, miniHerdNumber, cows, status, litres }\r\n\r\n                for (var i = 0; i < herd.calvingPatterns.length; i++) {                    \r\n                    var pattern = herd.calvingPatterns[i];\r\n                    var dryDate = this.getDryOffCommenceDate(pattern);\r\n                    var staleDate = this.getStaleOnDate(pattern);\r\n                    var nextCalvingPatternDate = staleDate;\r\n                    if (i + 1 < herd.calvingPatterns.length) {\r\n                        nextCalvingPatternDate = this.getDryOffCommenceDate(herd.calvingPatterns[(i + 1)]);\r\n                    }\r\n\r\n                    if (i == 0) {\r\n                        sDate = dryDate;\r\n                    }\r\n                    \r\n                    pattern.herdSize = herd.herdSize * (pattern.herdRatio / 100);   \r\n\r\n                    var startDate = sDate;\r\n                    do {\r\n                        if (startDate < dryDate) {\r\n                            weekData.push({\r\n                                dateOn: startDate,\r\n                                patternName: pattern.patternName,\r\n                                miniHerdNumber: 0,\r\n                                cows: pattern.herdSize,\r\n                                status: 'stale',\r\n                                litres: pattern.herdSize * pattern.staleAvg,\r\n                            });\r\n                        }                        \r\n                        startDate = startDate.addDays(7);\r\n                    } while (startDate < dryDate);\r\n\r\n                    pattern.herdSize += carryOvers;\r\n                    pattern.fertileCows = pattern.herdSize * (pattern.fertilityRate / 100);                    \r\n                    carryOvers = pattern.herdSize - pattern.fertileCows;\r\n\r\n                    //var patternObj = this.formDryCowsWeekly(pattern);\r\n                    var weeksData = this.formDryCowWeeks(pattern);\r\n                    for (var ii = 0; ii < weeksData.length; ii++) {\r\n                        weekData.push(weeksData[ii]);\r\n                    }\r\n\r\n                    //week data = { dateOn, patternName, miniHerdNumber, cows, status, litres }\r\n\r\n                    //add stale cow herd week data\r\n                    var currentDate = dryDate;\r\n                    do {\r\n                        weekData.push({\r\n                            dateOn: currentDate,\r\n                            patternName: pattern.patternName,\r\n                            miniHerdNumber: 0,\r\n                            cows: carryOvers,\r\n                            status: 'stale',\r\n                            litres: carryOvers * pattern.staleAvg,\r\n                        });\r\n\r\n                        currentDate = currentDate.addDays(7);\r\n                    } while (currentDate < nextCalvingPatternDate);                    \r\n                }                \r\n\r\n                return weekData;\r\n\r\n                //this.herdsData = {\r\n                //    herdName: herd.herdName,\r\n                //    patternData: patternData,\r\n                //};\r\n\r\n                //return this.herdsData;\r\n            }, \r\n            createYearlyHerdData(herd) {                \r\n                var patternData = [];                \r\n                var carryOvers = 0;                \r\n                var weekData = [];                \r\n                var sDate = this.dayOne\r\n                var eDate = sDate.addDays(52 * 7);\r\n\r\n                herd.calvingPatterns.orderBy('dateFrom');\r\n\r\n                 //week data = { dateOn, patternName, miniHerdNumber, cows, status, litres }\r\n\r\n                for (var i = 0; i < herd.calvingPatterns.length; i++) {                    \r\n                    var pattern = herd.calvingPatterns[i];\r\n                    var dryDate = this.getDryOffCommenceDate(pattern);\r\n                    var staleDate = this.getStaleOnDate(pattern);\r\n                    var nextCalvingPatternDate = staleDate;\r\n                    if (i + 1 < herd.calvingPatterns.length) {\r\n                        nextCalvingPatternDate = this.getDryOffCommenceDate(herd.calvingPatterns[(i + 1)]);\r\n                    }\r\n\r\n                    //if (i == 0) {\r\n                    //    sDate = dryDate;\r\n                    //}\r\n                    \r\n                    pattern.herdSize = herd.herdSize * (pattern.herdRatio / 100);   \r\n\r\n                    //var startDate = sDate;\r\n                    //do {\r\n                    //    if (startDate < dryDate) {\r\n                    //        weekData.push({\r\n                    //            dateOn: startDate,\r\n                    //            patternName: pattern.patternName,\r\n                    //            miniHerdNumber: 0,\r\n                    //            cows: pattern.herdSize,\r\n                    //            status: 'stale',\r\n                    //            litres: pattern.herdSize * pattern.staleAvg,\r\n                    //        });\r\n                    //    }                        \r\n                    //    startDate = startDate.addDays(7);\r\n                    //} while (startDate < dryDate);\r\n\r\n                    pattern.herdSize += carryOvers;\r\n                    pattern.fertileCows = pattern.herdSize * (pattern.fertilityRate / 100);                    \r\n                    carryOvers = pattern.herdSize - pattern.fertileCows;\r\n\r\n                    //var patternObj = this.formDryCowsWeekly(pattern);\r\n                    var weeksData = this.formDryCowYears(pattern);\r\n                    for (var ii = 0; ii < weeksData.length; ii++) {\r\n                        weekData.push(weeksData[ii]);\r\n                    }\r\n\r\n                    //week data = { dateOn, patternName, miniHerdNumber, cows, status, litres }\r\n\r\n                    //add stale cow herd week data\r\n                    var currentDate = dryDate;\r\n                    do {\r\n                        weekData.push({\r\n                            dateOn: currentDate,\r\n                            patternName: pattern.patternName,\r\n                            miniHerdNumber: 0,\r\n                            cows: carryOvers,\r\n                            status: 'stale',\r\n                            litres: carryOvers * pattern.staleAvg,\r\n                        });\r\n\r\n                        currentDate = currentDate.addDays(7);\r\n                    } while (currentDate < nextCalvingPatternDate);                    \r\n                }                \r\n\r\n                return weekData;\r\n\r\n                //this.herdsData = {\r\n                //    herdName: herd.herdName,\r\n                //    patternData: patternData,\r\n                //};\r\n\r\n                //return this.herdsData;\r\n            }, \r\n            isSameYearlyWeekAs(oWeekDate, d1, d2) {\r\n                //return moment(d1).isSame(d2, 'day') || d1 >= d2 && d1 < (d2.addDays(7));                                \r\n                //return d1.getDate() == d2.getDate() && d1.getMonth() == d2.getMonth();\r\n                do {\r\n                    if (d1 < oWeekDate) {\r\n                        d1 = d1.addDays(364);\r\n                    }                    \r\n                } while (d1 < oWeekDate);\r\n\r\n                do {\r\n                    if (d2 < oWeekDate) {\r\n                        d2 = d2.addDays(364);\r\n                    }                    \r\n                } while (d2 < oWeekDate);\r\n\r\n                var weekDif1 = this.inWeeks(oWeekDate, d1);\r\n                var weekDif2 = this.inWeeks(oWeekDate, d2);\r\n                \r\n                do {\r\n                    if (weekDif1 > 52) {\r\n                        d1 = d1.addDays(-364);\r\n                        weekDif1 = this.inWeeks(oWeekDate, d1);\r\n                    }                    \r\n                } while (weekDif1 > 52);\r\n\r\n                do {\r\n                    if (weekDif2 > 52) {\r\n                        d2 = d2.addDays(-364);\r\n                        weekDif2 = this.inWeeks(oWeekDate, d2);\r\n                    }                    \r\n                } while (weekDif2 > 52);              \r\n\r\n                return weekDif1 == weekDif2;\r\n            },\r\n            isSameWeekAs(d1, d2) {\r\n                //return moment(d1).isSame(d2, 'day') || d1 >= d2 && d1 < (d2.addDays(7));                                \r\n                return d1.getDate() == d2.getDate() && d1.getMonth() == d2.getMonth();\r\n            },\r\n            //returns [ { dateOn, patternName, miniHerdNumber, cows, status, litres } ]\r\n            formDryCowYears(pattern) {\r\n                var sDate = this.getDryOffCommenceDate(pattern);                \r\n                var firstHalf = this.getFirstDryHalfRate(pattern);\r\n                var secondHalf = this.getSecondDryHalfRate(pattern);                \r\n                var weekNumber = 0;\r\n                var calvingWeeks = this.inWeeks(pattern.dateFrom, pattern.dateTo);\r\n                //var cows = [];                                \r\n                var weekVolumes = [];\r\n\r\n                if (calvingWeeks == 0 && pattern.dateFrom == pattern.dateTo) {\r\n                    calvingWeeks = 1;\r\n                }                \r\n\r\n                do {\r\n                    var dryDate = sDate.addDays(7 * weekNumber);\r\n                    var calveDate = dryDate.addDays(7 * pattern.weeksDry);\r\n                    var peakDate = calveDate.addDays(7 * pattern.weeksToPeak);\r\n                    var peakEndDate = peakDate.addDays(7 * pattern.weeksOfPeak);\r\n                    var staleDate = peakEndDate.addDays(7 * pattern.weeksTillStale);\r\n                    var cowCount = weekNumber < pattern.halfPercentDryWeek ? firstHalf : secondHalf;\r\n                  \r\n                    //organize production\r\n                    //var currentDate = dryDate;\r\n                    //var currentDate = sDate;\r\n                    //var endDate = currentDate.addDays(52 * 7);\r\n                    var currentDate = dryDate;\r\n                    var endDate = currentDate.addDays(52 * 7);\r\n                    \r\n                    do {\r\n                        //register production\r\n                        var weekVolume = {\r\n                            patternName: pattern.patternName,\r\n                            miniHerdNumber: weekNumber,\r\n                            dateOn: currentDate,                            \r\n                            cows: cowCount,\r\n                            status: null,\r\n                            litres: 0\r\n                        };\r\n                      \r\n                        //if (currentDate < dryDate) {\r\n                        //    weekVolume.status = 'stale';\r\n                        //    weekVolume.litres = weekVolume.cows * pattern.staleAvg;\r\n                        //}\r\n                        //else\r\n                        if (currentDate <= calveDate) {\r\n                            //already done\r\n                            weekVolume.status = 'dry';\r\n                        }\r\n                        else if (currentDate <= peakDate) {\r\n                            var peakWeek = this.inWeeks(currentDate, peakDate);\r\n                            var avgDif = pattern.peakAvg - pattern.freshAvg;\r\n                            var avg = pattern.freshAvg;\r\n                            weekVolume.status = 'fresh';\r\n\r\n                            if (peakWeek >= 0) {\r\n                                avg = pattern.freshAvg + ((pattern.weeksToPeak - peakWeek) * (avgDif / pattern.weeksToPeak));\r\n                            }\r\n\r\n                            weekVolume.litres = weekVolume.cows * avg;\r\n                        }\r\n                        else if (currentDate <= peakEndDate) {\r\n                            weekVolume.status = 'fresh';\r\n                            weekVolume.litres = weekVolume.cows * pattern.peakAvg;\r\n                        }\r\n                        else if (currentDate <= staleDate) {\r\n                            var staleWeek = this.inWeeks(currentDate, staleDate);\r\n                            var avgDif = pattern.peakAvg - pattern.staleAvg;\r\n                            var avg = pattern.staleAvg;\r\n                            weekVolume.status = 'fresh';\r\n                            if (staleWeek >= 0) {\r\n                                avg = pattern.peakAvg - ((pattern.weeksTillStale - staleWeek) * (avgDif / pattern.weeksTillStale));\r\n                            }\r\n\r\n                            weekVolume.litres = weekVolume.cows * avg;\r\n                        }\r\n                        else {\r\n                            //add stale week\r\n                            weekVolume.status = 'stale';\r\n                            weekVolume.litres = weekVolume.cows * pattern.staleAvg;\r\n                        }\r\n\r\n                        weekVolumes.push(weekVolume);\r\n\r\n                        //weekNumber += 1;\r\n                        currentDate = currentDate.addDays(7);\r\n\r\n                    } while (currentDate < endDate);\r\n\r\n                    weekNumber += 1;\r\n\r\n                } while (weekNumber <= calvingWeeks);\r\n                \r\n                return weekVolumes;\r\n\r\n                //var obj = {\r\n                //    patternName: pattern.patternName,\r\n                //    weekVolumes: weekVolumes,\r\n                //    //carryOvers: pattern.herdSize <= 0 ? 0 : pattern.herdSize - (pattern.herdSize * (pattern.fertilityRate / 100)),\r\n                //    //cowWeeks: cows\r\n                //};\r\n             \r\n                //return obj;\r\n            }, \r\n            formDryCowWeeks(pattern) {\r\n                var sDate = this.getDryOffCommenceDate(pattern);                \r\n                var firstHalf = this.getFirstDryHalfRate(pattern);\r\n                var secondHalf = this.getSecondDryHalfRate(pattern);                \r\n                var weekNumber = 0;\r\n                var calvingWeeks = this.inWeeks(pattern.dateFrom, pattern.dateTo);\r\n                //var cows = [];                                \r\n                var weekVolumes = [];\r\n\r\n                if (calvingWeeks == 0 && pattern.dateFrom == pattern.dateTo) {\r\n                    calvingWeeks = 1;\r\n                }                \r\n\r\n                do {\r\n                    var dryDate = sDate.addDays(7 * weekNumber);\r\n                    var calveDate = dryDate.addDays(7 * pattern.weeksDry);\r\n                    var peakDate = calveDate.addDays(7 * pattern.weeksToPeak);\r\n                    var peakEndDate = peakDate.addDays(7 * pattern.weeksOfPeak);\r\n                    var staleDate = peakEndDate.addDays(7 * pattern.weeksTillStale);\r\n                    var cowCount = weekNumber < pattern.halfPercentDryWeek ? firstHalf : secondHalf;\r\n                  \r\n                    //organize production\r\n                    //var currentDate = dryDate;\r\n                    var currentDate = sDate;\r\n                    do {\r\n                        //register production\r\n                        var weekVolume = {\r\n                            patternName: pattern.patternName,\r\n                            miniHerdNumber: weekNumber,\r\n                            dateOn: currentDate,\r\n                            cows: cowCount,\r\n                            status: null,\r\n                            litres: 0\r\n                        };\r\n                      \r\n                            if (currentDate < dryDate) {\r\n                                weekVolume.status = 'stale';\r\n                                weekVolume.litres = weekVolume.cows * pattern.staleAvg;\r\n                            }\r\n                            else if (currentDate <= calveDate) {\r\n                                //already done\r\n                                weekVolume.status = 'dry';\r\n                            }\r\n                            else if (currentDate <= peakDate) {\r\n                                var peakWeek = this.inWeeks(currentDate, peakDate);\r\n                                var avgDif = pattern.peakAvg - pattern.freshAvg;\r\n                                var avg = pattern.freshAvg;\r\n                                weekVolume.status = 'fresh';\r\n\r\n                                if (peakWeek >= 0) {\r\n                                    avg = pattern.freshAvg + ((pattern.weeksToPeak - peakWeek) * (avgDif / pattern.weeksToPeak));\r\n                                }\r\n\r\n                                weekVolume.litres = weekVolume.cows * avg;\r\n                            }\r\n                            else if (currentDate <= peakEndDate) {\r\n                                weekVolume.status = 'fresh';\r\n                                weekVolume.litres = weekVolume.cows * pattern.peakAvg;\r\n                            }\r\n                            else if (currentDate <= staleDate) {\r\n                                var staleWeek = this.inWeeks(currentDate, staleDate);\r\n                                var avgDif = pattern.peakAvg - pattern.staleAvg;\r\n                                var avg = pattern.staleAvg;\r\n                                weekVolume.status = 'fresh';\r\n                                if (staleWeek >= 0) {\r\n                                    avg = pattern.peakAvg - ((pattern.weeksTillStale - staleWeek) * (avgDif / pattern.weeksTillStale));\r\n                                }\r\n\r\n                                weekVolume.litres = weekVolume.cows * avg;\r\n                            }\r\n\r\n                        weekVolumes.push(weekVolume);\r\n                      \r\n                        currentDate = currentDate.addDays(7);\r\n\r\n                    } while (currentDate <= staleDate);\r\n\r\n                    weekNumber += 1;\r\n\r\n                } while (weekNumber < calvingWeeks);\r\n\r\n                return weekVolumes;\r\n\r\n                //var obj = {\r\n                //    patternName: pattern.patternName,\r\n                //    weekVolumes: weekVolumes,\r\n                //    //carryOvers: pattern.herdSize <= 0 ? 0 : pattern.herdSize - (pattern.herdSize * (pattern.fertilityRate / 100)),\r\n                //    //cowWeeks: cows\r\n                //};\r\n             \r\n                //return obj;\r\n            },         \r\n            getStaleOnDate(pattern) {\r\n                return pattern.dateTo.addDays(7 * (pattern.weeksToPeak + pattern.weeksOfPeak + pattern.weeksTillStale));\r\n            },\r\n            getDryOffCommenceDate(pattern) {\r\n                //var d = new Date(pattern.dateFrom);\r\n                return pattern.dateFrom.addDays(0 - (7 * pattern.weeksDry));\r\n            },\r\n            getFirstDryHalfRate(pattern) {  \r\n                var calvingWeeks = this.inWeeks(pattern.dateFrom, pattern.dateTo);\r\n                \r\n                if (calvingWeeks == 0 || pattern.dateFrom == pattern.dateTo) {\r\n                    calvingWeeks = 1;\r\n                }\r\n\r\n                if (pattern.useHalfPercent == true && pattern.halfPercentDryWeek < calvingWeeks) {\r\n                    //var halfCowsToDry = (pattern.herdSize * (pattern.fertilityRate / 100)) / 2;                    \r\n                    //var halfCowsToDry = pattern.fertileCows / 2;                    \r\n                    return (pattern.fertileCows / 2) / pattern.halfPercentDryWeek;\r\n                }\r\n                else {\r\n                    return pattern.fertileCows / calvingWeeks;\r\n                    //return (pattern.herdSize * (pattern.fertilityRate / 100)) / calvingWeeks;\r\n                }\r\n            },\r\n            getSecondDryHalfRate(pattern) {                \r\n                var weeks = this.inWeeks(pattern.dateFrom, pattern.dateTo);\r\n\r\n                if (weeks == 0 || pattern.dateFrom == pattern.dateTo) {\r\n                    weeks = 1;\r\n                }\r\n\r\n                if (pattern.useHalfPercent == true && pattern.halfPercentDryWeek < weeks) {\r\n                    //var halfCowsToDry = (pattern.herdSize * (pattern.fertilityRate / 100)) / 2;\r\n                    //console.log('second half: ' + halfCowsToDry / (weeks - pattern.halfPercentDryWeek));\r\n                    //return halfCowsToDry / (weeks - pattern.halfPercentDryWeek);\r\n                    return (pattern.fertileCows / 2) / (weeks - pattern.halfPercentDryWeek);\r\n                }\r\n                else {\r\n                    //return (pattern.herdSize * (pattern.fertilityRate / 100)) / weeks;\r\n                    return pattern.fertileCows / weeks;\r\n                }                                \r\n            },\r\n            getAllStaleOnDate(pattern) {\r\n                return pattern.dateTo + (7 * (pattern.weeksToPeak + pattern.weeksOfPeak + pattern.weeksTillStale));                                \r\n            },        \r\n            getNewColor() {\r\n                var letters = '0123456789ABCDEF';\r\n                var color = '#';\r\n                for (var i = 0; i < 6; i++) {\r\n                    color += letters[Math.floor(Math.random() * 16)];\r\n                }\r\n                return color + '70';\r\n            },\r\n            getPatternLineValues(vObjects) {                \r\n                var volumeObjects = vObjects;\r\n                volumeObjects.orderBy('dateOn');\r\n\r\n                if (this.showProp == 'Litres') {\r\n                    return volumeObjects.map(x => x.litres);\r\n                }\r\n                else if (this.showProp == 'Average') {\r\n                    return volumeObjects.map(x => x.litres / x.inMilk);\r\n                }\r\n                else if (this.showProp == 'CowsInMilk') {\r\n                    return volumeObjects.map(x => x.inMilk);\r\n                }\r\n            },\r\n            getHerdLineValues(vObjects) {   \r\n                console.log(vObjects);\r\n                var volumeObjects = vObjects.selectMany(x => x.patternData);\r\n                \r\n                if (this.showProp == 'Litres') {\r\n                    return volumeObjects.map(x => x.litres);\r\n                }\r\n                else if (this.showProp == 'Average') {\r\n                    return volumeObjects.map(x => x.litres / x.inMilk);\r\n                }\r\n                else if (this.showProp == 'CowsInMilk') {\r\n                    return volumeObjects.map(x => x.inMilk);\r\n                }\r\n            },\r\n            inDays: function(d1, d2) {\r\n                var t2 = d2.getTime();\r\n                var t1 = d1.getTime();\r\n                return parseInt((t2 - t1) / (24 * 3600 * 1000));\r\n            },\r\n            //smaller date then larger date\r\n            inWeeks: function (d1, d2) {\r\n                var t2 = d2.getTime();\r\n                var t1 = d1.getTime();\r\n                return parseInt((t2 - t1) / (24 * 3600 * 1000 * 7));\r\n            },\r\n            inMonths: function (d1, d2) {\r\n                var d1Y = d1.getFullYear();\r\n                var d2Y = d2.getFullYear();\r\n                var d1M = d1.getMonth();\r\n                var d2M = d2.getMonth();\r\n                return (d2M + 12 * d2Y) - (d1M + 12 * d1Y);\r\n            },\r\n            inYears: function (d1, d2) {\r\n                return d2.getFullYear() - d1.getFullYear();\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n    .full-screen {\r\n        min-height: 100vh;\r\n    }\r\n\r\n    .below-nav {\r\n        margin-top: 60px;\r\n    }\r\n\r\n</style>\r\n\r\n\r\n\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=66ed12c2&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=66ed12c2&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"66ed12c2\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div id=\"app\">\r\n        <div class=\"navbar navbar-light bg-light fixed-top\">\r\n            <h3>Milk Projections</h3>\r\n        </div>\r\n        <Home/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Home from './components/Home.vue';\r\n\r\n    export default {\r\n        name: 'app',\r\n        components: {\r\n            Home\r\n        }\r\n    };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=48411656&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\r\nimport App from './App.vue';\r\nimport jQuery from 'jquery';\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'popper.js';\r\nimport moment from 'moment';\r\nimport '@icon/open-iconic/open-iconic.css';\r\nimport VueCookie from 'vue-cookie';\r\n\r\nwindow.$ = window.jQuery = jQuery;\r\n\r\nVue.use(VueCookie);\r\nVue.config.productionTip = true;\r\n\r\nVue.prototype.moment = moment;\r\n\r\nArray.prototype.orderBy = function (prop, asc = true) {\r\n    return this.sort(function (a, b) {\r\n        if (a[prop] > b[prop]) {\r\n            return asc === true ? 1 : -1;\r\n        }\r\n        else if (a[prop] < b[prop]) {\r\n            return asc === true ? -1 : 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    })\r\n}\r\n\r\nDate.prototype.addDays = function (days) {\r\n    var date = new Date(this.valueOf());\r\n    date.setDate(date.getDate() + days);\r\n    return date;\r\n}\r\n\r\nArray.prototype.selectMany = function (fn) {\r\n    return this.map(fn).reduce(function (x, y) { return x.concat(y); }, []);\r\n}\r\n\r\nnew Vue({\r\n    render: h => h(App)\r\n}).$mount('#app');\r\n"],"sourceRoot":""}